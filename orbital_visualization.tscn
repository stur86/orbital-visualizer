[gd_scene load_steps=17 format=3 uid="uid://dmbuhs4fponf5"]

[ext_resource type="Shader" path="res://Shaders/single_hydrogen_orbital.gdshader" id="1_x2cs6"]
[ext_resource type="Script" path="res://Scripts/orbital.gd" id="2_1n136"]
[ext_resource type="Script" path="res://Scripts/orbit_camera.gd" id="3_ipp1d"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_gcnpl"]
sky_top_color = Color(0, 0, 0, 1)
sky_horizon_color = Color(0.219608, 0.862745, 0.670588, 1)
sky_curve = 0.05
sky_energy_multiplier = 0.4
ground_bottom_color = Color(0, 0, 0, 1)
ground_horizon_color = Color(0.219608, 0.862745, 0.670588, 1)
ground_curve = 0.05
ground_energy_multiplier = 0.4
sun_angle_max = 0.0

[sub_resource type="Sky" id="Sky_pk02w"]
sky_material = SubResource("ProceduralSkyMaterial_gcnpl")

[sub_resource type="Environment" id="Environment_hhbei"]
background_mode = 2
sky = SubResource("Sky_pk02w")
volumetric_fog_enabled = true
volumetric_fog_density = 0.0
volumetric_fog_detail_spread = 4.0

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8oabd"]
shader = ExtResource("1_x2cs6")
shader_parameter/side = 20.0
shader_parameter/density_scaling = 1.0
shader_parameter/emission_color = Color(0.152941, 0.607843, 1, 1)
shader_parameter/a0 = 0.5
shader_parameter/n = 2
shader_parameter/l = 1
shader_parameter/m = 0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_fpkg7"]
diffuse_mode = 3
albedo_color = Color(0.686275, 0.0980392, 0.301961, 1)

[sub_resource type="SphereMesh" id="SphereMesh_ip05k"]
material = SubResource("StandardMaterial3D_fpkg7")

[sub_resource type="FontVariation" id="FontVariation_yi4oy"]
variation_embolden = 0.5

[sub_resource type="LabelSettings" id="LabelSettings_ib7px"]
font = SubResource("FontVariation_yi4oy")

[sub_resource type="GDScript" id="GDScript_y4vb1"]
script/source = "extends HBoxContainer


# Called when the node enters the scene tree for the first time.
func _ready():
	$SpinBox.value = OrbitalControl.orbital.n

func _on_spin_box_value_changed(value):
	OrbitalControl.set_n(int(value))
"

[sub_resource type="GDScript" id="GDScript_xkgup"]
script/source = "extends HBoxContainer


# Called when the node enters the scene tree for the first time.
func _ready():
	$SpinBox.value = OrbitalControl.orbital.l
	OrbitalControl.new_quantum_numbers.connect(_update_range)
	
func _update_range(n, l, m):
	$SpinBox.max_value = n-1


func _on_spin_box_value_changed(value):
	OrbitalControl.set_l(int(value))
"

[sub_resource type="GDScript" id="GDScript_j8p16"]
script/source = "extends HBoxContainer


# Called when the node enters the scene tree for the first time.
func _ready():
	$SpinBox.value = OrbitalControl.orbital.m
	OrbitalControl.new_quantum_numbers.connect(_update_range)

func _update_range(n, l, m):
	$SpinBox.max_value = l
	$SpinBox.min_value = -l

func _on_spin_box_value_changed(value):
	OrbitalControl.set_m(int(value))
"

[sub_resource type="GDScript" id="GDScript_cytju"]
script/source = "extends HBoxContainer


# Called when the node enters the scene tree for the first time.
func _ready():
	$ColorPicker.color = OrbitalControl.orbital.color


func _on_color_picker_color_changed(color):
	OrbitalControl.orbital.color = color
"

[sub_resource type="GDScript" id="GDScript_k0ssn"]
script/source = "extends HBoxContainer


# Called when the node enters the scene tree for the first time.
func _ready():
	$SpinBox.value = OrbitalControl.orbital.intensity

func _on_spin_box_value_changed(value):
	OrbitalControl.orbital.intensity = value
"

[node name="OrbitalVisualization" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_hhbei")

[node name="Orbital" type="FogVolume" parent="."]
size = Vector3(20, 20, 20)
shape = 0
material = SubResource("ShaderMaterial_8oabd")
script = ExtResource("2_1n136")

[node name="Nucleus" type="MeshInstance3D" parent="Orbital"]
transform = Transform3D(0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0)
mesh = SubResource("SphereMesh_ip05k")

[node name="CameraHinge" type="Node3D" parent="."]

[node name="Camera3D" type="Camera3D" parent="CameraHinge"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 5)
script = ExtResource("3_ipp1d")

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Panel" type="Panel" parent="CanvasLayer"]
anchors_preset = 9
anchor_bottom = 1.0
offset_right = 300.0
grow_vertical = 2

[node name="VBoxContainer" type="VBoxContainer" parent="CanvasLayer/Panel"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 20.0
offset_top = 20.0
offset_right = -20.0
offset_bottom = -20.0
grow_horizontal = 2
grow_vertical = 2

[node name="OrbitalHeader" type="Label" parent="CanvasLayer/Panel/VBoxContainer"]
custom_minimum_size = Vector2(0, 50)
layout_mode = 2
text = "Orbital properties"
label_settings = SubResource("LabelSettings_ib7px")
vertical_alignment = 1

[node name="n value" type="HBoxContainer" parent="CanvasLayer/Panel/VBoxContainer"]
layout_mode = 2
theme_override_constants/separation = 30
script = SubResource("GDScript_y4vb1")

[node name="Label" type="Label" parent="CanvasLayer/Panel/VBoxContainer/n value"]
custom_minimum_size = Vector2(30, 0)
layout_mode = 2
text = "n"

[node name="SpinBox" type="SpinBox" parent="CanvasLayer/Panel/VBoxContainer/n value"]
layout_mode = 2
min_value = 1.0
max_value = 7.0
value = 2.0
rounded = true

[node name="l value" type="HBoxContainer" parent="CanvasLayer/Panel/VBoxContainer"]
layout_mode = 2
theme_override_constants/separation = 30
script = SubResource("GDScript_xkgup")

[node name="Label" type="Label" parent="CanvasLayer/Panel/VBoxContainer/l value"]
custom_minimum_size = Vector2(30, 0)
layout_mode = 2
text = "l"

[node name="SpinBox" type="SpinBox" parent="CanvasLayer/Panel/VBoxContainer/l value"]
layout_mode = 2
max_value = 7.0
rounded = true

[node name="m value" type="HBoxContainer" parent="CanvasLayer/Panel/VBoxContainer"]
layout_mode = 2
theme_override_constants/separation = 30
script = SubResource("GDScript_j8p16")

[node name="Label" type="Label" parent="CanvasLayer/Panel/VBoxContainer/m value"]
custom_minimum_size = Vector2(30, 0)
layout_mode = 2
text = "m"

[node name="SpinBox" type="SpinBox" parent="CanvasLayer/Panel/VBoxContainer/m value"]
layout_mode = 2
max_value = 7.0
rounded = true

[node name="VisualizationHeader" type="Label" parent="CanvasLayer/Panel/VBoxContainer"]
custom_minimum_size = Vector2(0, 50)
layout_mode = 2
text = "Visualization properties"
label_settings = SubResource("LabelSettings_ib7px")
vertical_alignment = 1

[node name="Color value" type="HBoxContainer" parent="CanvasLayer/Panel/VBoxContainer"]
layout_mode = 2
theme_override_constants/separation = 30
script = SubResource("GDScript_cytju")

[node name="Label" type="Label" parent="CanvasLayer/Panel/VBoxContainer/Color value"]
custom_minimum_size = Vector2(100, 0)
layout_mode = 2
text = "Color"

[node name="ColorPicker" type="ColorPickerButton" parent="CanvasLayer/Panel/VBoxContainer/Color value"]
custom_minimum_size = Vector2(100, 0)
layout_mode = 2

[node name="Intensity value" type="HBoxContainer" parent="CanvasLayer/Panel/VBoxContainer"]
layout_mode = 2
theme_override_constants/separation = 30
script = SubResource("GDScript_k0ssn")

[node name="Label" type="Label" parent="CanvasLayer/Panel/VBoxContainer/Intensity value"]
custom_minimum_size = Vector2(100, 0)
layout_mode = 2
text = "Intensity"

[node name="SpinBox" type="SpinBox" parent="CanvasLayer/Panel/VBoxContainer/Intensity value"]
layout_mode = 2
max_value = 3.0
step = 0.1
allow_greater = true

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.701071, 0.470922, -0.535473, 0, 0.750918, 0.660395, 0.713091, -0.462984, 0.526447, 0, 3.45879, 4.89458)

[connection signal="value_changed" from="CanvasLayer/Panel/VBoxContainer/n value/SpinBox" to="CanvasLayer/Panel/VBoxContainer/n value" method="_on_spin_box_value_changed"]
[connection signal="value_changed" from="CanvasLayer/Panel/VBoxContainer/l value/SpinBox" to="CanvasLayer/Panel/VBoxContainer/l value" method="_on_spin_box_value_changed"]
[connection signal="value_changed" from="CanvasLayer/Panel/VBoxContainer/m value/SpinBox" to="CanvasLayer/Panel/VBoxContainer/m value" method="_on_spin_box_value_changed"]
[connection signal="color_changed" from="CanvasLayer/Panel/VBoxContainer/Color value/ColorPicker" to="CanvasLayer/Panel/VBoxContainer/Color value" method="_on_color_picker_color_changed"]
[connection signal="value_changed" from="CanvasLayer/Panel/VBoxContainer/Intensity value/SpinBox" to="CanvasLayer/Panel/VBoxContainer/Intensity value" method="_on_spin_box_value_changed"]
